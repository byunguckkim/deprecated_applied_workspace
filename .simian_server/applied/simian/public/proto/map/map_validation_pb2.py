# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: simian/public/proto/map/map_validation.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from simian.public.proto import common_pb2 as simian_dot_public_dot_proto_dot_common__pb2
from simian.public.proto import geometry_pb2 as simian_dot_public_dot_proto_dot_geometry__pb2
from simian.public.proto.map import map_enums_pb2 as simian_dot_public_dot_proto_dot_map_dot_map__enums__pb2
from simian.public.proto.map import map_id_pb2 as simian_dot_public_dot_proto_dot_map_dot_map__id__pb2


# @@protoc_insertion_point(post_imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
  name='simian/public/proto/map/map_validation.proto',
  package='simian_public.hdmap',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n,simian/public/proto/map/map_validation.proto\x12\x13simian_public.hdmap\x1a simian/public/proto/common.proto\x1a\"simian/public/proto/geometry.proto\x1a\'simian/public/proto/map/map_enums.proto\x1a$simian/public/proto/map/map_id.proto\"A\n\rCheckTypeEnum\"0\n\tCheckType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\t\n\x05\x45RROR\x10\x01\x12\x0b\n\x07WARNING\x10\x02\"U\n\x11ValidationSummary\x12@\n\x11validation_result\x18\x01 \x03(\x0b\x32%.simian_public.hdmap.ValidationResult\"\x85\x02\n\x10ValidationResult\x12\x12\n\nelement_id\x18\x01 \x01(\t\x12>\n\x04kind\x18\x02 \x01(\x0e\x32\x30.simian_public.hdmap.ElementTypeEnum.ElementType\x12\x33\n\x0b\x63oordinates\x18\x04 \x01(\x0b\x32\x1e.simian_public.common.PointENU\x12\x30\n\x03utm\x18\x05 \x01(\x0b\x32#.simian_public.common.UTMProjection\x12\x36\n\x08\x66\x61ilures\x18\x03 \x03(\x0b\x32$.simian_public.hdmap.ValidationCheck\"a\n\x0fValidationCheck\x12=\n\ndefinition\x18\x01 \x01(\x0b\x32).simian_public.hdmap.ValidationDefinition\x12\x0f\n\x07message\x18\x02 \x01(\t\"y\n\x14ValidationDefinition\x12\x0c\n\x04name\x18\x01 \x01(\t\x12@\n\ncheck_type\x18\x02 \x01(\x0e\x32,.simian_public.hdmap.CheckTypeEnum.CheckType\x12\x11\n\tis_custom\x18\x03 \x01(\x08\"h\n\x0b\x43ustomCheck\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12:\n\x04type\x18\x03 \x01(\x0e\x32,.simian_public.hdmap.CheckTypeEnum.CheckType\"F\n\x16\x43ustomValidationStatus\x12\x15\n\rcustom_stdout\x18\x01 \x01(\t\x12\x15\n\rcustom_stderr\x18\x02 \x01(\t\"\xa3\x02\n\x10ValidationStatus\x12<\n\x06status\x18\x01 \x01(\x0e\x32,.simian_public.hdmap.ValidationStatus.Status\x12\x12\n\nnum_errors\x18\x02 \x01(\x03\x12\x14\n\x0cnum_warnings\x18\x03 \x01(\x03\x12\x42\n\rcustom_status\x18\x04 \x01(\x0b\x32+.simian_public.hdmap.CustomValidationStatus\"c\n\x06Status\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0f\n\x0bUNVALIDATED\x10\x01\x12\x16\n\x12RUNNING_VALIDATION\x10\x02\x12\r\n\tVALIDATED\x10\x03\x12\x14\n\x10\x45RROR_VALIDATING\x10\x04\"\xa2\x01\n\x0f\x46ixErrorsStatus\x12;\n\x06status\x18\x01 \x01(\x0e\x32+.simian_public.hdmap.FixErrorsStatus.Status\"R\n\x06Status\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07UNFIXED\x10\x01\x12\x11\n\rRUNNING_FIXES\x10\x02\x12\t\n\x05\x46IXED\x10\x03\x12\x10\n\x0c\x45RROR_FIXING\x10\x04\"~\n\x11ValidationProfile\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x39\n\x06\x63hecks\x18\x02 \x03(\x0b\x32).simian_public.hdmap.ValidationDefinition\x12 \n\x18\x65nable_custom_validation\x18\x03 \x01(\x08\"\x8e\x06\n\tLaneError\x12\x15\n\rerror_message\x18\x01 \x01(\t\x12\x1b\n\x11\x63ustom_error_type\x18\x02 \x01(\tH\x00\x12\x1e\n\x14missing_connectivity\x18\x03 \x01(\x08H\x00\x12\x1d\n\x13missing_speed_limit\x18\x04 \x01(\x08H\x00\x12 \n\x16missing_elevation_data\x18\x05 \x01(\x08H\x00\x12\x39\n\x16invalid_predecessor_id\x18\x06 \x01(\x0b\x32\x17.simian_public.hdmap.IdH\x00\x12\x37\n\x14invalid_successor_id\x18\x07 \x01(\x0b\x32\x17.simian_public.hdmap.IdH\x00\x12H\n%invalid_left_neighbor_forward_lane_id\x18\x08 \x01(\x0b\x32\x17.simian_public.hdmap.IdH\x00\x12I\n&invalid_right_neighbor_forward_lane_id\x18\t \x01(\x0b\x32\x17.simian_public.hdmap.IdH\x00\x12$\n\x1amissing_left_boundary_type\x18\x0b \x01(\x08H\x00\x12%\n\x1bmissing_right_boundary_type\x18\x0c \x01(\x08H\x00\x12\x1f\n\x15invalid_lane_geometry\x18\r \x01(\x08H\x00\x12\x1c\n\x12invalid_width_data\x18\x0e \x01(\x08H\x00\x12 \n\x16invalid_elevation_data\x18\x0f \x01(\x08H\x00\x12(\n\x1einvalid_lane_width_transitions\x18\x10 \x01(\x08H\x00\x12 \n\x16invalid_lane_curvature\x18\x11 \x01(\x08H\x00\x12#\n\x19invalid_duplicate_lane_id\x18\x12 \x01(\x08H\x00\x12\x19\n\x0fmissing_lane_id\x18\x13 \x01(\x08H\x00\x12\x1c\n\x12lane_out_of_bounds\x18\x14 \x01(\x08H\x00:\x02\x18\x01\x42\x07\n\x05\x65rror\"\xc3\x03\n\x0bLaneWarning\x12\x17\n\x0fwarning_message\x18\x01 \x01(\t\x12\x1d\n\x13\x63ustom_warning_type\x18\x02 \x01(\tH\x00\x12&\n\x1cmultiple_lane_boundary_types\x18\x03 \x01(\x08H\x00\x12\x1b\n\x11multiple_segments\x18\x04 \x01(\x08H\x00\x12&\n\x1cinconsistent_segment_lengths\x18\x05 \x01(\x08H\x00\x12\x1e\n\x14too_many_lane_points\x18\x06 \x01(\x08H\x00\x12\x1e\n\x14missing_width_sample\x18\x07 \x01(\x08H\x00\x12/\n%missing_left_neighbor_forward_lane_id\x18\x08 \x01(\x08H\x00\x12\x30\n&missing_right_neighbor_forward_lane_id\x18\t \x01(\x08H\x00\x12 \n\x16missing_elevation_data\x18\n \x01(\x08H\x00\x12\x1b\n\x11missing_lane_info\x18\x0b \x01(\x08H\x00\x12\x1e\n\x14no_neighbor_lane_ids\x18\x0c \x01(\x08H\x00:\x02\x18\x01\x42\t\n\x07warning\"\xb7\x01\n\x0bRegionError\x12\x15\n\rerror_message\x18\x01 \x01(\t\x12\x1b\n\x11\x63ustom_error_type\x18\x02 \x01(\tH\x00\x12\x1b\n\x11missing_region_id\x18\x03 \x01(\x08H\x00\x12#\n\x19invalid_bounding_geometry\x18\x04 \x01(\x08H\x00\x12%\n\x1binvalid_duplicate_region_id\x18\x05 \x01(\x08H\x00:\x02\x18\x01\x42\x07\n\x05\x65rror\"\xa8\x01\n\rRegionWarning\x12\x17\n\x0fwarning_message\x18\x01 \x01(\t\x12\x1d\n\x13\x63ustom_warning_type\x18\x02 \x01(\tH\x00\x12\"\n\x18missing_lane_association\x18\x03 \x01(\x08H\x00\x12,\n\"invalid_lane_association_placement\x18\x04 \x01(\x08H\x00:\x02\x18\x01\x42\t\n\x07warning\"\xa2\x01\n\tSignError\x12\x15\n\rerror_message\x18\x01 \x01(\t\x12\x1b\n\x11\x63ustom_error_type\x18\x02 \x01(\tH\x00\x12\"\n\x18missing_lane_association\x18\x03 \x01(\x08H\x00\x12\x17\n\rmissing_shape\x18\x04 \x01(\x08H\x00\x12\x17\n\rmissing_color\x18\x05 \x01(\x08H\x00:\x02\x18\x01\x42\x07\n\x05\x65rror\"\x8b\x01\n\x0bSignalError\x12\x15\n\rerror_message\x18\x01 \x01(\t\x12\x1b\n\x11\x63ustom_error_type\x18\x02 \x01(\tH\x00\x12\"\n\x18missing_lane_association\x18\x03 \x01(\x08H\x00\x12\x17\n\rmissing_color\x18\x04 \x01(\x08H\x00:\x02\x18\x01\x42\x07\n\x05\x65rror\"L\n\tLineError\x12\x15\n\rerror_message\x18\x01 \x01(\t\x12\x1b\n\x11\x63ustom_error_type\x18\x02 \x01(\tH\x00:\x02\x18\x01\x42\x07\n\x05\x65rrorb\x06proto3'
  ,
  dependencies=[simian_dot_public_dot_proto_dot_common__pb2.DESCRIPTOR,simian_dot_public_dot_proto_dot_geometry__pb2.DESCRIPTOR,simian_dot_public_dot_proto_dot_map_dot_map__enums__pb2.DESCRIPTOR,simian_dot_public_dot_proto_dot_map_dot_map__id__pb2.DESCRIPTOR,])



_CHECKTYPEENUM_CHECKTYPE = _descriptor.EnumDescriptor(
  name='CheckType',
  full_name='simian_public.hdmap.CheckTypeEnum.CheckType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WARNING', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=235,
  serialized_end=283,
)
_sym_db.RegisterEnumDescriptor(_CHECKTYPEENUM_CHECKTYPE)

_VALIDATIONSTATUS_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='simian_public.hdmap.ValidationStatus.Status',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='UNVALIDATED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RUNNING_VALIDATION', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='VALIDATED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR_VALIDATING', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1229,
  serialized_end=1328,
)
_sym_db.RegisterEnumDescriptor(_VALIDATIONSTATUS_STATUS)

_FIXERRORSSTATUS_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='simian_public.hdmap.FixErrorsStatus.Status',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='UNFIXED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RUNNING_FIXES', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FIXED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR_FIXING', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1411,
  serialized_end=1493,
)
_sym_db.RegisterEnumDescriptor(_FIXERRORSSTATUS_STATUS)


_CHECKTYPEENUM = _descriptor.Descriptor(
  name='CheckTypeEnum',
  full_name='simian_public.hdmap.CheckTypeEnum',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CHECKTYPEENUM_CHECKTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=218,
  serialized_end=283,
)


_VALIDATIONSUMMARY = _descriptor.Descriptor(
  name='ValidationSummary',
  full_name='simian_public.hdmap.ValidationSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='validation_result', full_name='simian_public.hdmap.ValidationSummary.validation_result', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=370,
)


_VALIDATIONRESULT = _descriptor.Descriptor(
  name='ValidationResult',
  full_name='simian_public.hdmap.ValidationResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='element_id', full_name='simian_public.hdmap.ValidationResult.element_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='kind', full_name='simian_public.hdmap.ValidationResult.kind', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='coordinates', full_name='simian_public.hdmap.ValidationResult.coordinates', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='utm', full_name='simian_public.hdmap.ValidationResult.utm', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failures', full_name='simian_public.hdmap.ValidationResult.failures', index=4,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=373,
  serialized_end=634,
)


_VALIDATIONCHECK = _descriptor.Descriptor(
  name='ValidationCheck',
  full_name='simian_public.hdmap.ValidationCheck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='definition', full_name='simian_public.hdmap.ValidationCheck.definition', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message', full_name='simian_public.hdmap.ValidationCheck.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=636,
  serialized_end=733,
)


_VALIDATIONDEFINITION = _descriptor.Descriptor(
  name='ValidationDefinition',
  full_name='simian_public.hdmap.ValidationDefinition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='simian_public.hdmap.ValidationDefinition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='check_type', full_name='simian_public.hdmap.ValidationDefinition.check_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='is_custom', full_name='simian_public.hdmap.ValidationDefinition.is_custom', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=735,
  serialized_end=856,
)


_CUSTOMCHECK = _descriptor.Descriptor(
  name='CustomCheck',
  full_name='simian_public.hdmap.CustomCheck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='simian_public.hdmap.CustomCheck.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message', full_name='simian_public.hdmap.CustomCheck.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='simian_public.hdmap.CustomCheck.type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=858,
  serialized_end=962,
)


_CUSTOMVALIDATIONSTATUS = _descriptor.Descriptor(
  name='CustomValidationStatus',
  full_name='simian_public.hdmap.CustomValidationStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='custom_stdout', full_name='simian_public.hdmap.CustomValidationStatus.custom_stdout', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_stderr', full_name='simian_public.hdmap.CustomValidationStatus.custom_stderr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=964,
  serialized_end=1034,
)


_VALIDATIONSTATUS = _descriptor.Descriptor(
  name='ValidationStatus',
  full_name='simian_public.hdmap.ValidationStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='simian_public.hdmap.ValidationStatus.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_errors', full_name='simian_public.hdmap.ValidationStatus.num_errors', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_warnings', full_name='simian_public.hdmap.ValidationStatus.num_warnings', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_status', full_name='simian_public.hdmap.ValidationStatus.custom_status', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _VALIDATIONSTATUS_STATUS,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1037,
  serialized_end=1328,
)


_FIXERRORSSTATUS = _descriptor.Descriptor(
  name='FixErrorsStatus',
  full_name='simian_public.hdmap.FixErrorsStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='simian_public.hdmap.FixErrorsStatus.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FIXERRORSSTATUS_STATUS,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1331,
  serialized_end=1493,
)


_VALIDATIONPROFILE = _descriptor.Descriptor(
  name='ValidationProfile',
  full_name='simian_public.hdmap.ValidationProfile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='simian_public.hdmap.ValidationProfile.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='checks', full_name='simian_public.hdmap.ValidationProfile.checks', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='enable_custom_validation', full_name='simian_public.hdmap.ValidationProfile.enable_custom_validation', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1495,
  serialized_end=1621,
)


_LANEERROR = _descriptor.Descriptor(
  name='LaneError',
  full_name='simian_public.hdmap.LaneError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='simian_public.hdmap.LaneError.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_error_type', full_name='simian_public.hdmap.LaneError.custom_error_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_connectivity', full_name='simian_public.hdmap.LaneError.missing_connectivity', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_speed_limit', full_name='simian_public.hdmap.LaneError.missing_speed_limit', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_elevation_data', full_name='simian_public.hdmap.LaneError.missing_elevation_data', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_predecessor_id', full_name='simian_public.hdmap.LaneError.invalid_predecessor_id', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_successor_id', full_name='simian_public.hdmap.LaneError.invalid_successor_id', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_left_neighbor_forward_lane_id', full_name='simian_public.hdmap.LaneError.invalid_left_neighbor_forward_lane_id', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_right_neighbor_forward_lane_id', full_name='simian_public.hdmap.LaneError.invalid_right_neighbor_forward_lane_id', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_left_boundary_type', full_name='simian_public.hdmap.LaneError.missing_left_boundary_type', index=9,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_right_boundary_type', full_name='simian_public.hdmap.LaneError.missing_right_boundary_type', index=10,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_lane_geometry', full_name='simian_public.hdmap.LaneError.invalid_lane_geometry', index=11,
      number=13, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_width_data', full_name='simian_public.hdmap.LaneError.invalid_width_data', index=12,
      number=14, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_elevation_data', full_name='simian_public.hdmap.LaneError.invalid_elevation_data', index=13,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_lane_width_transitions', full_name='simian_public.hdmap.LaneError.invalid_lane_width_transitions', index=14,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_lane_curvature', full_name='simian_public.hdmap.LaneError.invalid_lane_curvature', index=15,
      number=17, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_duplicate_lane_id', full_name='simian_public.hdmap.LaneError.invalid_duplicate_lane_id', index=16,
      number=18, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_lane_id', full_name='simian_public.hdmap.LaneError.missing_lane_id', index=17,
      number=19, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lane_out_of_bounds', full_name='simian_public.hdmap.LaneError.lane_out_of_bounds', index=18,
      number=20, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\030\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='simian_public.hdmap.LaneError.error',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1624,
  serialized_end=2406,
)


_LANEWARNING = _descriptor.Descriptor(
  name='LaneWarning',
  full_name='simian_public.hdmap.LaneWarning',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='warning_message', full_name='simian_public.hdmap.LaneWarning.warning_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_warning_type', full_name='simian_public.hdmap.LaneWarning.custom_warning_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='multiple_lane_boundary_types', full_name='simian_public.hdmap.LaneWarning.multiple_lane_boundary_types', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='multiple_segments', full_name='simian_public.hdmap.LaneWarning.multiple_segments', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='inconsistent_segment_lengths', full_name='simian_public.hdmap.LaneWarning.inconsistent_segment_lengths', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='too_many_lane_points', full_name='simian_public.hdmap.LaneWarning.too_many_lane_points', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_width_sample', full_name='simian_public.hdmap.LaneWarning.missing_width_sample', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_left_neighbor_forward_lane_id', full_name='simian_public.hdmap.LaneWarning.missing_left_neighbor_forward_lane_id', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_right_neighbor_forward_lane_id', full_name='simian_public.hdmap.LaneWarning.missing_right_neighbor_forward_lane_id', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_elevation_data', full_name='simian_public.hdmap.LaneWarning.missing_elevation_data', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_lane_info', full_name='simian_public.hdmap.LaneWarning.missing_lane_info', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='no_neighbor_lane_ids', full_name='simian_public.hdmap.LaneWarning.no_neighbor_lane_ids', index=11,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\030\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='warning', full_name='simian_public.hdmap.LaneWarning.warning',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2409,
  serialized_end=2860,
)


_REGIONERROR = _descriptor.Descriptor(
  name='RegionError',
  full_name='simian_public.hdmap.RegionError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='simian_public.hdmap.RegionError.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_error_type', full_name='simian_public.hdmap.RegionError.custom_error_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_region_id', full_name='simian_public.hdmap.RegionError.missing_region_id', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_bounding_geometry', full_name='simian_public.hdmap.RegionError.invalid_bounding_geometry', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_duplicate_region_id', full_name='simian_public.hdmap.RegionError.invalid_duplicate_region_id', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\030\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='simian_public.hdmap.RegionError.error',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2863,
  serialized_end=3046,
)


_REGIONWARNING = _descriptor.Descriptor(
  name='RegionWarning',
  full_name='simian_public.hdmap.RegionWarning',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='warning_message', full_name='simian_public.hdmap.RegionWarning.warning_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_warning_type', full_name='simian_public.hdmap.RegionWarning.custom_warning_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_lane_association', full_name='simian_public.hdmap.RegionWarning.missing_lane_association', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_lane_association_placement', full_name='simian_public.hdmap.RegionWarning.invalid_lane_association_placement', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\030\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='warning', full_name='simian_public.hdmap.RegionWarning.warning',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3049,
  serialized_end=3217,
)


_SIGNERROR = _descriptor.Descriptor(
  name='SignError',
  full_name='simian_public.hdmap.SignError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='simian_public.hdmap.SignError.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_error_type', full_name='simian_public.hdmap.SignError.custom_error_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_lane_association', full_name='simian_public.hdmap.SignError.missing_lane_association', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_shape', full_name='simian_public.hdmap.SignError.missing_shape', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_color', full_name='simian_public.hdmap.SignError.missing_color', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\030\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='simian_public.hdmap.SignError.error',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3220,
  serialized_end=3382,
)


_SIGNALERROR = _descriptor.Descriptor(
  name='SignalError',
  full_name='simian_public.hdmap.SignalError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='simian_public.hdmap.SignalError.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_error_type', full_name='simian_public.hdmap.SignalError.custom_error_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_lane_association', full_name='simian_public.hdmap.SignalError.missing_lane_association', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_color', full_name='simian_public.hdmap.SignalError.missing_color', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\030\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='simian_public.hdmap.SignalError.error',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3385,
  serialized_end=3524,
)


_LINEERROR = _descriptor.Descriptor(
  name='LineError',
  full_name='simian_public.hdmap.LineError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='simian_public.hdmap.LineError.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_error_type', full_name='simian_public.hdmap.LineError.custom_error_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\030\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='simian_public.hdmap.LineError.error',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3526,
  serialized_end=3602,
)

_CHECKTYPEENUM_CHECKTYPE.containing_type = _CHECKTYPEENUM
_VALIDATIONSUMMARY.fields_by_name['validation_result'].message_type = _VALIDATIONRESULT
_VALIDATIONRESULT.fields_by_name['kind'].enum_type = simian_dot_public_dot_proto_dot_map_dot_map__enums__pb2._ELEMENTTYPEENUM_ELEMENTTYPE
_VALIDATIONRESULT.fields_by_name['coordinates'].message_type = simian_dot_public_dot_proto_dot_geometry__pb2._POINTENU
_VALIDATIONRESULT.fields_by_name['utm'].message_type = simian_dot_public_dot_proto_dot_common__pb2._UTMPROJECTION
_VALIDATIONRESULT.fields_by_name['failures'].message_type = _VALIDATIONCHECK
_VALIDATIONCHECK.fields_by_name['definition'].message_type = _VALIDATIONDEFINITION
_VALIDATIONDEFINITION.fields_by_name['check_type'].enum_type = _CHECKTYPEENUM_CHECKTYPE
_CUSTOMCHECK.fields_by_name['type'].enum_type = _CHECKTYPEENUM_CHECKTYPE
_VALIDATIONSTATUS.fields_by_name['status'].enum_type = _VALIDATIONSTATUS_STATUS
_VALIDATIONSTATUS.fields_by_name['custom_status'].message_type = _CUSTOMVALIDATIONSTATUS
_VALIDATIONSTATUS_STATUS.containing_type = _VALIDATIONSTATUS
_FIXERRORSSTATUS.fields_by_name['status'].enum_type = _FIXERRORSSTATUS_STATUS
_FIXERRORSSTATUS_STATUS.containing_type = _FIXERRORSSTATUS
_VALIDATIONPROFILE.fields_by_name['checks'].message_type = _VALIDATIONDEFINITION
_LANEERROR.fields_by_name['invalid_predecessor_id'].message_type = simian_dot_public_dot_proto_dot_map_dot_map__id__pb2._ID
_LANEERROR.fields_by_name['invalid_successor_id'].message_type = simian_dot_public_dot_proto_dot_map_dot_map__id__pb2._ID
_LANEERROR.fields_by_name['invalid_left_neighbor_forward_lane_id'].message_type = simian_dot_public_dot_proto_dot_map_dot_map__id__pb2._ID
_LANEERROR.fields_by_name['invalid_right_neighbor_forward_lane_id'].message_type = simian_dot_public_dot_proto_dot_map_dot_map__id__pb2._ID
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['custom_error_type'])
_LANEERROR.fields_by_name['custom_error_type'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['missing_connectivity'])
_LANEERROR.fields_by_name['missing_connectivity'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['missing_speed_limit'])
_LANEERROR.fields_by_name['missing_speed_limit'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['missing_elevation_data'])
_LANEERROR.fields_by_name['missing_elevation_data'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_predecessor_id'])
_LANEERROR.fields_by_name['invalid_predecessor_id'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_successor_id'])
_LANEERROR.fields_by_name['invalid_successor_id'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_left_neighbor_forward_lane_id'])
_LANEERROR.fields_by_name['invalid_left_neighbor_forward_lane_id'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_right_neighbor_forward_lane_id'])
_LANEERROR.fields_by_name['invalid_right_neighbor_forward_lane_id'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['missing_left_boundary_type'])
_LANEERROR.fields_by_name['missing_left_boundary_type'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['missing_right_boundary_type'])
_LANEERROR.fields_by_name['missing_right_boundary_type'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_lane_geometry'])
_LANEERROR.fields_by_name['invalid_lane_geometry'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_width_data'])
_LANEERROR.fields_by_name['invalid_width_data'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_elevation_data'])
_LANEERROR.fields_by_name['invalid_elevation_data'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_lane_width_transitions'])
_LANEERROR.fields_by_name['invalid_lane_width_transitions'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_lane_curvature'])
_LANEERROR.fields_by_name['invalid_lane_curvature'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['invalid_duplicate_lane_id'])
_LANEERROR.fields_by_name['invalid_duplicate_lane_id'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['missing_lane_id'])
_LANEERROR.fields_by_name['missing_lane_id'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEERROR.oneofs_by_name['error'].fields.append(
  _LANEERROR.fields_by_name['lane_out_of_bounds'])
_LANEERROR.fields_by_name['lane_out_of_bounds'].containing_oneof = _LANEERROR.oneofs_by_name['error']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['custom_warning_type'])
_LANEWARNING.fields_by_name['custom_warning_type'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['multiple_lane_boundary_types'])
_LANEWARNING.fields_by_name['multiple_lane_boundary_types'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['multiple_segments'])
_LANEWARNING.fields_by_name['multiple_segments'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['inconsistent_segment_lengths'])
_LANEWARNING.fields_by_name['inconsistent_segment_lengths'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['too_many_lane_points'])
_LANEWARNING.fields_by_name['too_many_lane_points'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['missing_width_sample'])
_LANEWARNING.fields_by_name['missing_width_sample'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['missing_left_neighbor_forward_lane_id'])
_LANEWARNING.fields_by_name['missing_left_neighbor_forward_lane_id'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['missing_right_neighbor_forward_lane_id'])
_LANEWARNING.fields_by_name['missing_right_neighbor_forward_lane_id'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['missing_elevation_data'])
_LANEWARNING.fields_by_name['missing_elevation_data'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['missing_lane_info'])
_LANEWARNING.fields_by_name['missing_lane_info'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_LANEWARNING.oneofs_by_name['warning'].fields.append(
  _LANEWARNING.fields_by_name['no_neighbor_lane_ids'])
_LANEWARNING.fields_by_name['no_neighbor_lane_ids'].containing_oneof = _LANEWARNING.oneofs_by_name['warning']
_REGIONERROR.oneofs_by_name['error'].fields.append(
  _REGIONERROR.fields_by_name['custom_error_type'])
_REGIONERROR.fields_by_name['custom_error_type'].containing_oneof = _REGIONERROR.oneofs_by_name['error']
_REGIONERROR.oneofs_by_name['error'].fields.append(
  _REGIONERROR.fields_by_name['missing_region_id'])
_REGIONERROR.fields_by_name['missing_region_id'].containing_oneof = _REGIONERROR.oneofs_by_name['error']
_REGIONERROR.oneofs_by_name['error'].fields.append(
  _REGIONERROR.fields_by_name['invalid_bounding_geometry'])
_REGIONERROR.fields_by_name['invalid_bounding_geometry'].containing_oneof = _REGIONERROR.oneofs_by_name['error']
_REGIONERROR.oneofs_by_name['error'].fields.append(
  _REGIONERROR.fields_by_name['invalid_duplicate_region_id'])
_REGIONERROR.fields_by_name['invalid_duplicate_region_id'].containing_oneof = _REGIONERROR.oneofs_by_name['error']
_REGIONWARNING.oneofs_by_name['warning'].fields.append(
  _REGIONWARNING.fields_by_name['custom_warning_type'])
_REGIONWARNING.fields_by_name['custom_warning_type'].containing_oneof = _REGIONWARNING.oneofs_by_name['warning']
_REGIONWARNING.oneofs_by_name['warning'].fields.append(
  _REGIONWARNING.fields_by_name['missing_lane_association'])
_REGIONWARNING.fields_by_name['missing_lane_association'].containing_oneof = _REGIONWARNING.oneofs_by_name['warning']
_REGIONWARNING.oneofs_by_name['warning'].fields.append(
  _REGIONWARNING.fields_by_name['invalid_lane_association_placement'])
_REGIONWARNING.fields_by_name['invalid_lane_association_placement'].containing_oneof = _REGIONWARNING.oneofs_by_name['warning']
_SIGNERROR.oneofs_by_name['error'].fields.append(
  _SIGNERROR.fields_by_name['custom_error_type'])
_SIGNERROR.fields_by_name['custom_error_type'].containing_oneof = _SIGNERROR.oneofs_by_name['error']
_SIGNERROR.oneofs_by_name['error'].fields.append(
  _SIGNERROR.fields_by_name['missing_lane_association'])
_SIGNERROR.fields_by_name['missing_lane_association'].containing_oneof = _SIGNERROR.oneofs_by_name['error']
_SIGNERROR.oneofs_by_name['error'].fields.append(
  _SIGNERROR.fields_by_name['missing_shape'])
_SIGNERROR.fields_by_name['missing_shape'].containing_oneof = _SIGNERROR.oneofs_by_name['error']
_SIGNERROR.oneofs_by_name['error'].fields.append(
  _SIGNERROR.fields_by_name['missing_color'])
_SIGNERROR.fields_by_name['missing_color'].containing_oneof = _SIGNERROR.oneofs_by_name['error']
_SIGNALERROR.oneofs_by_name['error'].fields.append(
  _SIGNALERROR.fields_by_name['custom_error_type'])
_SIGNALERROR.fields_by_name['custom_error_type'].containing_oneof = _SIGNALERROR.oneofs_by_name['error']
_SIGNALERROR.oneofs_by_name['error'].fields.append(
  _SIGNALERROR.fields_by_name['missing_lane_association'])
_SIGNALERROR.fields_by_name['missing_lane_association'].containing_oneof = _SIGNALERROR.oneofs_by_name['error']
_SIGNALERROR.oneofs_by_name['error'].fields.append(
  _SIGNALERROR.fields_by_name['missing_color'])
_SIGNALERROR.fields_by_name['missing_color'].containing_oneof = _SIGNALERROR.oneofs_by_name['error']
_LINEERROR.oneofs_by_name['error'].fields.append(
  _LINEERROR.fields_by_name['custom_error_type'])
_LINEERROR.fields_by_name['custom_error_type'].containing_oneof = _LINEERROR.oneofs_by_name['error']
DESCRIPTOR.message_types_by_name['CheckTypeEnum'] = _CHECKTYPEENUM
DESCRIPTOR.message_types_by_name['ValidationSummary'] = _VALIDATIONSUMMARY
DESCRIPTOR.message_types_by_name['ValidationResult'] = _VALIDATIONRESULT
DESCRIPTOR.message_types_by_name['ValidationCheck'] = _VALIDATIONCHECK
DESCRIPTOR.message_types_by_name['ValidationDefinition'] = _VALIDATIONDEFINITION
DESCRIPTOR.message_types_by_name['CustomCheck'] = _CUSTOMCHECK
DESCRIPTOR.message_types_by_name['CustomValidationStatus'] = _CUSTOMVALIDATIONSTATUS
DESCRIPTOR.message_types_by_name['ValidationStatus'] = _VALIDATIONSTATUS
DESCRIPTOR.message_types_by_name['FixErrorsStatus'] = _FIXERRORSSTATUS
DESCRIPTOR.message_types_by_name['ValidationProfile'] = _VALIDATIONPROFILE
DESCRIPTOR.message_types_by_name['LaneError'] = _LANEERROR
DESCRIPTOR.message_types_by_name['LaneWarning'] = _LANEWARNING
DESCRIPTOR.message_types_by_name['RegionError'] = _REGIONERROR
DESCRIPTOR.message_types_by_name['RegionWarning'] = _REGIONWARNING
DESCRIPTOR.message_types_by_name['SignError'] = _SIGNERROR
DESCRIPTOR.message_types_by_name['SignalError'] = _SIGNALERROR
DESCRIPTOR.message_types_by_name['LineError'] = _LINEERROR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CheckTypeEnum = _reflection.GeneratedProtocolMessageType('CheckTypeEnum', (_message.Message,), {
  'DESCRIPTOR' : _CHECKTYPEENUM,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.CheckTypeEnum)
  })
_sym_db.RegisterMessage(CheckTypeEnum)

ValidationSummary = _reflection.GeneratedProtocolMessageType('ValidationSummary', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATIONSUMMARY,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.ValidationSummary)
  })
_sym_db.RegisterMessage(ValidationSummary)

ValidationResult = _reflection.GeneratedProtocolMessageType('ValidationResult', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATIONRESULT,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.ValidationResult)
  })
_sym_db.RegisterMessage(ValidationResult)

ValidationCheck = _reflection.GeneratedProtocolMessageType('ValidationCheck', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATIONCHECK,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.ValidationCheck)
  })
_sym_db.RegisterMessage(ValidationCheck)

ValidationDefinition = _reflection.GeneratedProtocolMessageType('ValidationDefinition', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATIONDEFINITION,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.ValidationDefinition)
  })
_sym_db.RegisterMessage(ValidationDefinition)

CustomCheck = _reflection.GeneratedProtocolMessageType('CustomCheck', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMCHECK,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.CustomCheck)
  })
_sym_db.RegisterMessage(CustomCheck)

CustomValidationStatus = _reflection.GeneratedProtocolMessageType('CustomValidationStatus', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMVALIDATIONSTATUS,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.CustomValidationStatus)
  })
_sym_db.RegisterMessage(CustomValidationStatus)

ValidationStatus = _reflection.GeneratedProtocolMessageType('ValidationStatus', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATIONSTATUS,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.ValidationStatus)
  })
_sym_db.RegisterMessage(ValidationStatus)

FixErrorsStatus = _reflection.GeneratedProtocolMessageType('FixErrorsStatus', (_message.Message,), {
  'DESCRIPTOR' : _FIXERRORSSTATUS,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.FixErrorsStatus)
  })
_sym_db.RegisterMessage(FixErrorsStatus)

ValidationProfile = _reflection.GeneratedProtocolMessageType('ValidationProfile', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATIONPROFILE,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.ValidationProfile)
  })
_sym_db.RegisterMessage(ValidationProfile)

LaneError = _reflection.GeneratedProtocolMessageType('LaneError', (_message.Message,), {
  'DESCRIPTOR' : _LANEERROR,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.LaneError)
  })
_sym_db.RegisterMessage(LaneError)

LaneWarning = _reflection.GeneratedProtocolMessageType('LaneWarning', (_message.Message,), {
  'DESCRIPTOR' : _LANEWARNING,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.LaneWarning)
  })
_sym_db.RegisterMessage(LaneWarning)

RegionError = _reflection.GeneratedProtocolMessageType('RegionError', (_message.Message,), {
  'DESCRIPTOR' : _REGIONERROR,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.RegionError)
  })
_sym_db.RegisterMessage(RegionError)

RegionWarning = _reflection.GeneratedProtocolMessageType('RegionWarning', (_message.Message,), {
  'DESCRIPTOR' : _REGIONWARNING,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.RegionWarning)
  })
_sym_db.RegisterMessage(RegionWarning)

SignError = _reflection.GeneratedProtocolMessageType('SignError', (_message.Message,), {
  'DESCRIPTOR' : _SIGNERROR,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.SignError)
  })
_sym_db.RegisterMessage(SignError)

SignalError = _reflection.GeneratedProtocolMessageType('SignalError', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALERROR,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.SignalError)
  })
_sym_db.RegisterMessage(SignalError)

LineError = _reflection.GeneratedProtocolMessageType('LineError', (_message.Message,), {
  'DESCRIPTOR' : _LINEERROR,
  '__module__' : 'simian.public.proto.map.map_validation_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.hdmap.LineError)
  })
_sym_db.RegisterMessage(LineError)


_LANEERROR._options = None
_LANEWARNING._options = None
_REGIONERROR._options = None
_REGIONWARNING._options = None
_SIGNERROR._options = None
_SIGNALERROR._options = None
_LINEERROR._options = None
# @@protoc_insertion_point(module_scope)
