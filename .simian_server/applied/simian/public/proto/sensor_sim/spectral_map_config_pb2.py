# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: simian/public/proto/sensor_sim/spectral_map_config.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from simian.public.proto import common_pb2 as simian_dot_public_dot_proto_dot_common__pb2


# @@protoc_insertion_point(post_imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
  name='simian/public/proto/sensor_sim/spectral_map_config.proto',
  package='simian_public.sensor_sim.map_config',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n8simian/public/proto/sensor_sim/spectral_map_config.proto\x12#simian_public.sensor_sim.map_config\x1a simian/public/proto/common.proto\"\x8f\x03\n\x11SpectralMapConfig\x12P\n\x10\x61pplied_provided\x18\x01 \x01(\x0b\x32\x34.simian_public.sensor_sim.map_config.AppliedProvidedH\x00\x12K\n\x0e\x63ustom_dlc_map\x18\x02 \x01(\x0b\x32\x31.simian_public.sensor_sim.map_config.CustomDLCMapH\x00\x12@\n\x08\x66\x62x_mesh\x18\x03 \x01(\x0b\x32,.simian_public.sensor_sim.map_config.FBXMeshH\x00\x12U\n\x13roadrunner_fbx_mesh\x18\x04 \x01(\x0b\x32\x36.simian_public.sensor_sim.map_config.RoadrunnerFBXMeshH\x00\x12-\n\nmap_offset\x18\x05 \x01(\x0b\x32\x19.simian_public.common.UTMB\x13\n\x11spectral_map_type\"\x11\n\x0f\x41ppliedProvided\"2\n\x0c\x43ustomDLCMap\x12\x11\n\tumap_name\x18\x01 \x01(\t\x12\x0f\n\x07pak_uri\x18\x02 \x01(\t\"\x1b\n\x07\x46\x42XMesh\x12\x10\n\x08mesh_uri\x18\x01 \x01(\t\"*\n\x11RoadrunnerFBXMesh\x12\x15\n\rmesh_data_dir\x18\x01 \x01(\tb\x06proto3'
  ,
  dependencies=[simian_dot_public_dot_proto_dot_common__pb2.DESCRIPTOR,])




_SPECTRALMAPCONFIG = _descriptor.Descriptor(
  name='SpectralMapConfig',
  full_name='simian_public.sensor_sim.map_config.SpectralMapConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='applied_provided', full_name='simian_public.sensor_sim.map_config.SpectralMapConfig.applied_provided', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='custom_dlc_map', full_name='simian_public.sensor_sim.map_config.SpectralMapConfig.custom_dlc_map', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fbx_mesh', full_name='simian_public.sensor_sim.map_config.SpectralMapConfig.fbx_mesh', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='roadrunner_fbx_mesh', full_name='simian_public.sensor_sim.map_config.SpectralMapConfig.roadrunner_fbx_mesh', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='map_offset', full_name='simian_public.sensor_sim.map_config.SpectralMapConfig.map_offset', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='spectral_map_type', full_name='simian_public.sensor_sim.map_config.SpectralMapConfig.spectral_map_type',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=132,
  serialized_end=531,
)


_APPLIEDPROVIDED = _descriptor.Descriptor(
  name='AppliedProvided',
  full_name='simian_public.sensor_sim.map_config.AppliedProvided',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=533,
  serialized_end=550,
)


_CUSTOMDLCMAP = _descriptor.Descriptor(
  name='CustomDLCMap',
  full_name='simian_public.sensor_sim.map_config.CustomDLCMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='umap_name', full_name='simian_public.sensor_sim.map_config.CustomDLCMap.umap_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pak_uri', full_name='simian_public.sensor_sim.map_config.CustomDLCMap.pak_uri', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=552,
  serialized_end=602,
)


_FBXMESH = _descriptor.Descriptor(
  name='FBXMesh',
  full_name='simian_public.sensor_sim.map_config.FBXMesh',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mesh_uri', full_name='simian_public.sensor_sim.map_config.FBXMesh.mesh_uri', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=604,
  serialized_end=631,
)


_ROADRUNNERFBXMESH = _descriptor.Descriptor(
  name='RoadrunnerFBXMesh',
  full_name='simian_public.sensor_sim.map_config.RoadrunnerFBXMesh',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mesh_data_dir', full_name='simian_public.sensor_sim.map_config.RoadrunnerFBXMesh.mesh_data_dir', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=633,
  serialized_end=675,
)

_SPECTRALMAPCONFIG.fields_by_name['applied_provided'].message_type = _APPLIEDPROVIDED
_SPECTRALMAPCONFIG.fields_by_name['custom_dlc_map'].message_type = _CUSTOMDLCMAP
_SPECTRALMAPCONFIG.fields_by_name['fbx_mesh'].message_type = _FBXMESH
_SPECTRALMAPCONFIG.fields_by_name['roadrunner_fbx_mesh'].message_type = _ROADRUNNERFBXMESH
_SPECTRALMAPCONFIG.fields_by_name['map_offset'].message_type = simian_dot_public_dot_proto_dot_common__pb2._UTM
_SPECTRALMAPCONFIG.oneofs_by_name['spectral_map_type'].fields.append(
  _SPECTRALMAPCONFIG.fields_by_name['applied_provided'])
_SPECTRALMAPCONFIG.fields_by_name['applied_provided'].containing_oneof = _SPECTRALMAPCONFIG.oneofs_by_name['spectral_map_type']
_SPECTRALMAPCONFIG.oneofs_by_name['spectral_map_type'].fields.append(
  _SPECTRALMAPCONFIG.fields_by_name['custom_dlc_map'])
_SPECTRALMAPCONFIG.fields_by_name['custom_dlc_map'].containing_oneof = _SPECTRALMAPCONFIG.oneofs_by_name['spectral_map_type']
_SPECTRALMAPCONFIG.oneofs_by_name['spectral_map_type'].fields.append(
  _SPECTRALMAPCONFIG.fields_by_name['fbx_mesh'])
_SPECTRALMAPCONFIG.fields_by_name['fbx_mesh'].containing_oneof = _SPECTRALMAPCONFIG.oneofs_by_name['spectral_map_type']
_SPECTRALMAPCONFIG.oneofs_by_name['spectral_map_type'].fields.append(
  _SPECTRALMAPCONFIG.fields_by_name['roadrunner_fbx_mesh'])
_SPECTRALMAPCONFIG.fields_by_name['roadrunner_fbx_mesh'].containing_oneof = _SPECTRALMAPCONFIG.oneofs_by_name['spectral_map_type']
DESCRIPTOR.message_types_by_name['SpectralMapConfig'] = _SPECTRALMAPCONFIG
DESCRIPTOR.message_types_by_name['AppliedProvided'] = _APPLIEDPROVIDED
DESCRIPTOR.message_types_by_name['CustomDLCMap'] = _CUSTOMDLCMAP
DESCRIPTOR.message_types_by_name['FBXMesh'] = _FBXMESH
DESCRIPTOR.message_types_by_name['RoadrunnerFBXMesh'] = _ROADRUNNERFBXMESH
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SpectralMapConfig = _reflection.GeneratedProtocolMessageType('SpectralMapConfig', (_message.Message,), {
  'DESCRIPTOR' : _SPECTRALMAPCONFIG,
  '__module__' : 'simian.public.proto.sensor_sim.spectral_map_config_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.sensor_sim.map_config.SpectralMapConfig)
  })
_sym_db.RegisterMessage(SpectralMapConfig)

AppliedProvided = _reflection.GeneratedProtocolMessageType('AppliedProvided', (_message.Message,), {
  'DESCRIPTOR' : _APPLIEDPROVIDED,
  '__module__' : 'simian.public.proto.sensor_sim.spectral_map_config_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.sensor_sim.map_config.AppliedProvided)
  })
_sym_db.RegisterMessage(AppliedProvided)

CustomDLCMap = _reflection.GeneratedProtocolMessageType('CustomDLCMap', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMDLCMAP,
  '__module__' : 'simian.public.proto.sensor_sim.spectral_map_config_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.sensor_sim.map_config.CustomDLCMap)
  })
_sym_db.RegisterMessage(CustomDLCMap)

FBXMesh = _reflection.GeneratedProtocolMessageType('FBXMesh', (_message.Message,), {
  'DESCRIPTOR' : _FBXMESH,
  '__module__' : 'simian.public.proto.sensor_sim.spectral_map_config_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.sensor_sim.map_config.FBXMesh)
  })
_sym_db.RegisterMessage(FBXMesh)

RoadrunnerFBXMesh = _reflection.GeneratedProtocolMessageType('RoadrunnerFBXMesh', (_message.Message,), {
  'DESCRIPTOR' : _ROADRUNNERFBXMESH,
  '__module__' : 'simian.public.proto.sensor_sim.spectral_map_config_pb2'
  # @@protoc_insertion_point(class_scope:simian_public.sensor_sim.map_config.RoadrunnerFBXMesh)
  })
_sym_db.RegisterMessage(RoadrunnerFBXMesh)


# @@protoc_insertion_point(module_scope)
